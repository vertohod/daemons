Ссылка на примеры версток чата: https://www.bypeople.com/css-chat/
Мне показалась интересной "Minimal CSS Chat UI", которую можно взять за основу. Но есть интересные элементы и в других верстках.


Принцип взаимодействия клиента с сервером заключается в том, что клиент отправляет команду представляющую собой JSON определенного содержания:

{"id":1,"tp":"command","vr":1,"pl":{}}

id - Произвольный идентификатор команды. Генерируется клиетом. Этот номер возвращается в ответе от сервера и клиент может определить на какую команду получил ответ.
tp (type) - Тип объекта. С помощью него клиент и сервер определяет каким образом интерпретировать данные в JSON-объекте.
vr (version) - Версия объекта. На данный момент все версии 1.
pl (payload) - Полезная информация, передоваемая в объекте.

Объекты могут содержаться в поле полезной информации других объектов. Глубина вложенности не ограничина, но на текущий момент она равна не более 3.

Рассмотрим команду создания пользователя в системе.

{"id":1,"tp":"command","vr":1,"pl":{"tp":"create_user","vr":1,"nickname":"test","password":"123456"}}

Расспишу подробней содержание полей вложенного объекта:

{"tp":"create_user","vr":1,"nickname":"test","password":"123456"}

Тут как и в объекте предыдущего уровня есть поля "tp" и "vr". Это ключевые поля, они присутствуют во всех объектах. В данном случаи "tp" показывает,
что объект представляет собой команду "create_user" - "создание пользователя". Остальные поля представляют собой полезную нагрузку самой команды:

nickname - Имя пользователя.
password - Пароль.

Приведу пример ответа сервера на команду создания пользователя:

{"tp":"response","vr":1,"code":105,"command_id":1,"description":"This nickname is taken already. Choose another one please.","result":[]}

code - Результат выполнения команды. Если код равен нулю - команда выполнена успешно, иначе в этом поле содержится код ошибки.
command_id - Содержит идетификатор команды, на которую был сгенерирован текущий ответ.
description - Описание ошибки, если такая возникла при выполнении команды. Если команда выполнена успешно, то поле содержит пустую строку.
result - Результат, который может содержать массив объектов. В том случае если команда представляет собой запрос каких-либо данных, то это поле заполняется.

Примеры других команд и ответы сервера:

Запрос:
{"id":2,"tp":"command","vr":1,"pl":{"tp":"login","vr":1,"nickname":"test","password":"asdf","hash":"0"}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":2,"description":"","result":[{"tp":"password_hash","vr":1,"value":"10337973634078405951"}]}

В ответе на авторизацию содержится объект "password_hash". Он нужен для того, чтоб не вынуждать пользователя вводить пароль каждый раз при авторизации.
Этот хэш запоминается на устройстве и в дальнейшем используется вместо пароля. Т.е. в запросе на авторизацию (объект "login") вместо поля
"password" заполняем поле "hash" с содержимым из ответа на предыдущую удачную авторизацию.

Примеры остальных запросов пока приведу без объяснения. По мере работы буду дополнять документацию.

Команды, связанные с авторизацией:

Запрос:
{"id":4,"tp":"command","vr":1,"pl":{"tp":"get_status","vr":1}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":4,"description":"","result":[{"tp":"status","vr":1,"user_oid":781391279788,"nickname":"test","created":1499022557,"connections_amount":1,"channels":[]}]}

Запрос:
{"id":5,"tp":"command","vr":1,"pl":{"tp":"logout","vr":1}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":5,"description":"","result":[]}

Команды, связанные с созданием каналов и отправкой сообщений:

Запрос:
{"id":3,"tp":"command","vr":1,"pl":{"tp":"create_channel","vr":1,"name":"new_channel","description":"This is some new channel"}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":3,"description":"","result":[]}

Запрос:
{"id":4,"tp":"command","vr":1,"pl":{"tp":"look_for_channel","vr":1,"text":""}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":4,"description":"","result":[{"tp":"channel","vr":1,"oid":781391279788,"name":"new_channel","description":"This is some new
channel"},{"tp":"channel","vr":1,"oid":275406047116,"name":"qqq","description":"qqwe"},{"tp":"channel","vr":1,"oid":865118788855,"name":"asdf","description":"qwer"}]}

Запрос:
{"id":5,"tp":"command","vr":1,"pl":{"tp":"come_in","vr":1,"channel_oid":1964630416631}}
Ответ:
{"tp":"response","vr":1,"code":1,"command_id":5,"description":"Error","result":[]}

Запрос:
{"id":22,"tp":"message","vr":1,"channel_oid":1964630416631,"sender_oid":112233,"recipient_oid":0,"time":0,"encrypted":false,"payload":"some text"}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":22,"description":"","result":[]}

Запрос:
{"id":6,"tp":"command","vr":1,"pl":{"tp":"get_history","vr":1,"channel_oid":1964630416631,"time":2147483647}}
Ответ:
{"tp":"response","vr":1,"code":0,"command_id":6,"description":"","result":[{"tp":"message","vr":1,"id":22,"channel_oid":1964630416631,"sender_oid":781391279788,"recipient_oid":0,"time":1499028070,"encrypted":false,"payload":"some text"},{"tp":"message","vr":1,"id":22,"channel_oid":1964630416631,"sender_oid":781391279788,"recipient_oid":0,"time":1499028069,"encrypted":false,"payload":"some text"},{"tp":"message","vr":1,"id":22,"channel_oid":1964630416631,"sender_oid":781391279788,"recipient_oid":0,"time":1499028068,"encrypted":false,"payload":"some text"},{"tp":"message","vr":1,"id":22,"channel_oid":1964630416631,"sender_oid":781391279788,"recipient_oid":0,"time":1499028067,"encrypted":false,"payload":"some text"}]}

Запрос:
{"id":7,"tp":"command","vr":1,"pl":{"tp":"come_out","vr":1,"channel_oid":1964630416631}}
Ответ:
{"tp":"response","vr":1,"code":1,"command_id":7,"description":"Error","result":[]}


Проверка состояния канала:

Запрос:
{"tp":"ping","vr":1,"id":44,"time":1499028346}
Ответ:
{"tp":"pong","vr":1,"id":44,"time":1499028346}


Событие ("tp" = "event") сообщяет другим пользователям о том, что текущий пользователь печатает сообщение. Сервер никак не обрабатывает события, он просто их пересылает.
Т.е. поле "payload" (кстати странно, что не сокращено) может содержать любой объект, главное чтоб клиенты его могли обрабатывать. Сервер это поле не обрабатывает.
В данном примере представлен ориентировочный вариант содержания информации о печатающем пользователе.

Запрос:
{"tp":"event","vr":1,"time":1491768206,"channel_oid":1964630416631,"recipient_oid":0,"payload":{"tp":"typing","vr":1,"user_oid":1374917674892,"nickname":"test","flag":true}}



